/*
 * TCSS 305 - Assignment 5: PowerPaint
 */
package gui;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.RenderingHints;
//import java.awt.Shape;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
//import java.awt.event.MouseListener;
//import java.awt.event.MouseMotionListener;
import java.awt.geom.Line2D;

import javax.swing.JPanel;

/**
 * Creates the JPanel that holds the drawing area.
 * 
 * @author Shannon Murphy
 * @version 7 February 2015
 */
@SuppressWarnings("serial")
public class DrawingPanel extends JPanel {
    // constants for the JPanel
    
    /** The color of the background. */
    private static final Color BACKGROUND_COLOR = Color.WHITE;
    
    /** The size for the panel. */
    private static final Dimension PANEL_SIZE = new Dimension(400, 200);
    
    // instance fields
    
    /** The 2D Line to be drawn. */
    private Line2D myLine;
    
    /** The starting point for the line. */
    private Point myStartPoint;
    
    /** The end point for the line. */
    private Point myEndPoint;

    
    /**
     * Constructor to initialize fields.
     */
    public DrawingPanel() {
        super();
        setPreferredSize(PANEL_SIZE);
        setBackground(BACKGROUND_COLOR);
        addMouseListener(new MyMouseListener());
        addMouseMotionListener(new MyMouseListener());
    }
    
    /**
     * Draws a line on the panel.
     * 
     * @param theGraphics the graphic.
     */
    public void paintComponent(final Graphics theGraphics) {
        super.paintComponent(theGraphics);
        final Graphics2D g2d = (Graphics2D) theGraphics;
//        final Shape shape = new Line2D.Double(0, 0, 20, 20);
        if (myStartPoint != null && myEndPoint != null) {
            g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
                                 RenderingHints.VALUE_ANTIALIAS_ON);
            g2d.setPaint(Color.BLACK);
            g2d.setStroke(new BasicStroke(1));
            g2d.draw(myLine);     
        }
    }
    
    
    /**
     * Listens for mouse dragged and mouse pressed, to draw on the panel.
     */
    private class MyMouseListener extends MouseAdapter {
        @Override
        public void mouseDragged(final MouseEvent theEvent) {

            myEndPoint = theEvent.getPoint();
            myLine = new Line2D.Double(myStartPoint, myEndPoint); 
            repaint();
        }
        @Override
        public void mousePressed(final MouseEvent theEvent) {
            myStartPoint = theEvent.getPoint();
        }
    }
}
